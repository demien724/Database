SELECT upper(ENAME) FROM EMP;
SELECT LOWER(ENAME) FROM EMP;
SELECT INITCAP(ENAME) FROM EMP;


-- LENGTH 
SELECT LENGTH(ENAME) FROM EMP;

SELECT SUBSTR(ENAME,2) FROM EMP;
SELECT SUBSTR(ENAME,1,2) FROM EMP;
SELECT SUBSTR(ENAME,-2) FROM EMP;


SELECT REPLACE(ENAME,'L','E') FROM EMP;


SELECT LPAD(ENAME, 6, '#') FROM EMP;
SELECT RPAD(ENAME, 6, '*') FROM EMP;

SELECT CONCAT(ENAME,EMPNO) FROM EMP;
SELECT CONCAT(CONCAT(ENAME,':'),EMPNO) FROM EMP;

SELECT * FROM EMP;
SELECT ENAME,TRIM(' ' FROM ENAME) FROM EMP;



--ENAME의 글자수 검색
SELECT LENGTH(ENAME) FROM EMP;

--JOB이 MANAGER인 사람의 ENAME 글자수 검색
SELECT JOB,LENGTH(ENAME) FROM EMP WHERE JOB = 'MANAGER';

--COMM이 null인 사람의 ENAME, JOB 검색
SELECT * FROM EMP WHERE  COMM IS NULL;


--COMM이 null이 아닌 사람의 HIREDATE 검색
SELECT HIREDATE FROM EMP WHERE COMM IS NOT NULL;

--ENAME의 2번째글자부터 끝까지 검색
SELECT SUBSTR(ENAME,2) FROM EMP;

--JOB의 1번째 글자부터 3번째 글자까지 검색
SELECT SUBSTR(ENAME,1,3) FROM EMP;

--ENAME의 글자 중 K를 P으로 변경하여 검색
SELECT REPLACE(ENAME,'K','P') FROM EMP;

--ENAME과 ENPNO을 이용하여 ‘7369번은 SMITH입니다'로 출력S
SELECT CONCAT(CONCAT(CONCAT(EMPNO , '번은 ' ) , ENAME),'입니다') FROM EMP;

--HIREDATE 이용하여 입사한 월과 요일을 출력
SELECT HIREDATE,
TO_CHAR(SYSDATE, 'MM') AS MM, TO_CHAR(SYSDATE,'DAY') AS DAY FROM EMP;

--JOB이 MANAGER이면 level1, SALESMAN이면 level2, 기타이면 level3라고 LEVEL_RESULT컬럼에 출력
SELECT EMPNO,JOB,SAL,DECODE(JOB, 'MANAGER','level11','SALESMAN','level12','level13') AS LEVEL_RESULT FROM EMP;



--
--
--
--
SELECT* FROM EMP;
SELECT COUNT(SAL),SUM(SAL) ,AVG(SAL) FROM EMP;
SELECT MAX(SAL), MIN(SAL) FROM EMP;

SELECT JOB, COUNT(SAL),SUM(SAL) ,AVG(SAL), MAX(SAL), MIN(SAL) FROM EMP GROUP BY JOB
HAVING COUNT(SAL) >= 4;		-- 그룹을 지어서 검색후 필터링


------------ 응용 문제
--전체 직원수 출력
SELECT COUNT(EMPNO) AS 직원수 FROM EMP;

--DEPTNO가 20이거나 MGR이 7700이하인 직원수 출력
SELECT COUNT(EMPNO) FROM EMP WHERE DEPTNO=20 OR MGR<=7700;

--DEPTNO가 10 또는 20인 직원의 SAL최저 출력
SELECT MIN(SAL) FROM EMP
WHERE DEPTNO = 10 OR DEPTNO =20;

--직원의 SAL 최저, 최고, 합계 출력
SELECT MIN(SAL), MAX(SAL), SUM(SAL) FROM EMP;

--DEPTNO별  SAL 평균 출력
SELECT DEPTNO ,AVG(SAL) FROM EMP GROUP BY DEPTNO;

--DEPTNO별  SAL 합계를 DEPTNO 오름차순으로 출력
SELECT DEPTNO ,SUM(SAL) FROM EMP GROUP BY DEPTNO
ORDER BY DEPTNO;

--DEPTNO별  SAL 평균이 2000이상인 SAL평균을 DEPTNO역순으로 출력
SELECT DEPTNO, AVG(SAL) FROM EMP HAVING AVG(SAL) >= 2000
GROUP BY DEPTNO;

--JOB이 MANAGER인 직원의 전체 수, 월급의 평균 검색
SELECT COUNT(SAL),AVG(SAL) FROM EMP WHERE JOB='MANAGER';
 
--ENAME에 S를 포함하는 직원의 전체 수를 검색
SELECT COUNT(*) FROM EMP WHERE ENAME LIKE '%S%';

--SAL이 3000이상이고,  COMM이 null이 아닌 직원의 전체 수 검색, SAL의 역순으로 출력
SELECT COUNT(*) FROM EMP WHERE SAL>=3000 AND COMM IS NOT NULL ORDER BY SAL DESC;


----------------------------
SELECT count(*)
FROM EMP e 

SELECT count(*)
FROM EMP e 
WHERE DEPTNO = 20 OR MGR <= 7700


SELECT MIN(SAL)
FROM EMP e 
WHERE DEPTNO = 10 OR DEPTNO = 20

SELECT DEPTNO, avg(SAL)
FROM EMP 
GROUP BY DEPTNO

SELECT DEPTNO, SUM(SAL)
FROM EMP 
GROUP BY DEPTNO
ORDER BY DEPTNO 

SELECT DEPTNO, avg(SAL)
FROM EMP 
GROUP BY DEPTNO
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO DESC 

SELECT COUNT(*), AVG(SAL) 
FROM EMP 
WHERE JOB = 'MANAGER'

SELECT COUNT(*) 
FROM EMP 
WHERE ENAME LIKE '%S%'

SELECT COUNT(*) 
FROM EMP 
WHERE SAL >= 3000 AND COMM IS NOT NULL 
ORDER BY SAL DESC


-- 테이블 검색 방법
-- 1. 집합
-- 2. 조인 (☆)
-- 3. 서브쿼리 


------------------------------
-- Join >>
-- 검색을 하고 싶은데 항목들이 여러개의 테이블에 흩어져있는 경우
-- 테이블을 모아서(합해서) 검색

SELECT *
FROM "MEMBER" m ,BBS b		-- JOIN에서 테이블을 두 개 가지고 옴
WHERE m.ID = b.WRITER;		-- 단 공통되는 부분을 따로 명시

SELECT b."no",b.TITLE, NAME 
FROM "MEMBER" m ,BBS b
WHERE m.ID = b.WRITER;		-- 공통되는 부분, INNER JOIN

---- emp와 dept의 공통된 부분을 확인해
---- 추출
SELECT * FROM emp;
SELECT * FROM DEPT;

SELECT e.EMPNO ,e.ENAME ,e.JOB,d.DEPTNO  ,d.loc FROM EMP e ,DEPT d 
WHERE e.DEPTNO = d.DEPTNO ;

SELECT *
FROM "MEMBER" m 
right OUTER JOIN bbs b
ON (m.id = b.writer);

SELECT *
FROM "MEMBER" m 
LEFT OUTER JOIN bbs b
ON (m.id = b.writer);


------- 테이블의 정보를 다 보이게
--- OUTER JOIN  
SELECT *
FROM EMP e 			-- LEFT
LEFT OUTER JOIN dept d	-- RIGHT , LEFT를 먼저 보이게 함
ON (e.DEPTNO = d.DEPTNO); 

SELECT *
FROM EMP e 
right OUTER JOIN dept d
ON (e.DEPTNO = d.DEPTNO); 

------------- 응용 문제
--member table과 bbs table의 inner join하시오.(조인 조건 bbs의 writer, member의 id)
SELECT *
FROM MEMBER M, BBS b 
WHERE m.ID = b.WRITER;

--member table과 bbs table의 left outer join하시오.(조인 조건 bbs의 writer, member의 id)
SELECT *
FROM MEMBER m
LEFT OUTER JOIN bbs B
ON (m.ID = b.WRITER );

--member table과 bbs table의 right outer join하시오.(조인 조건 bbs의 writer, member의 id)
SELECT *
FROM MEMBER m
RIGHT OUTER JOIN bbs B
ON (m.ID = b.WRITER );

SELECT M.ID ,M.NAME, B.TITLE ,B.CONTENT 
FROM MEMBER m
LEFT OUTER JOIN bbs B
ON (m.ID = b.WRITER );

CREATE TABLE COMPANY(
	ID VARCHAR(100) PRIMARY KEY,
	NAME VARCHAR(100),
	ADDR VARCHAR(100),
	TEL VARCHAR(100)
)

INSERT INTO COMPANY VALUES ('c100','good','souel','011');
INSERT INTO COMPANY VALUES ('c200','great','busan','012');
INSERT INTO COMPANY VALUES ('c300','not bad','ulsan','013');
INSERT INTO COMPANY VALUES ('c400','so so','kang-ju','014');



-- INNER JOIN
SELECT *
FROM COMPANY C, PRODUCT p 
WHERE C.ID = P.COMPANY;

-- LEFT OUTER JOIN
SELECT * 
FROM COMPANY c 
LEFT OUTER JOIN PRODUCT p 
ON (C.ID = P.COMPANY);

-- RIGHT OUTER JOIN
SELECT * 
FROM COMPANY c 
RIGHT OUTER JOIN PRODUCT p 
ON (C.ID = P.COMPANY);






